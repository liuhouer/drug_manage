<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.fast.modules.customer.dao.CustomerBankDao">
    
	<sql id="customerBankColumns">
		a.id AS "id",
		a.customer_id AS "customerId",
		a.bank AS "bank",
		a.bank_number AS "bankNumber",
		a.open_account_name AS "openAccountName",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="customerBankJoins">
	</sql>
    
	<select id="get" resultType="CustomerBank">
		SELECT 
			<include refid="customerBankColumns"/>
		FROM customer_bank a
		<include refid="customerBankJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="CustomerBank">
		SELECT 
			<include refid="customerBankColumns"/>
		FROM customer_bank a
		<include refid="customerBankJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="CustomerBank">
		SELECT 
			<include refid="customerBankColumns"/>
		FROM customer_bank a
		<include refid="customerBankJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO customer_bank(
			id,
			customer_id,
			bank,
			bank_number,
			open_account_name,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{customerId},
			#{bank},
			#{bankNumber},
			#{openAccountName},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE customer_bank SET 	
			bank = #{bank},
			bank_number = #{bankNumber},
			open_account_name = #{openAccountName},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE customer_bank SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>