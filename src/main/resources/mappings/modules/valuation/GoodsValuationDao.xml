<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.fast.modules.valuation.dao.GoodsValuationDao">
    
	<sql id="goodsValuationColumns">
		a.id AS "id",
		a.goods_id AS "goodsId",
		a.third_query_price_flag AS "thirdQueryPriceFlag",
		a.not_third_query_price_flag AS "notThirdQueryPriceFlag",
		a.one_price AS "onePrice",
		a.two_price AS "twoPrice",
		a.three_price AS "threePrice",
		a.four_price AS "fourPrice",
		a.five_price AS "fivePrice",
		a.public_price AS "publicPrice",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="goodsValuationJoins">
	</sql>

	<sql id="goodsColumns">
		g.office_id AS "goods.office.id",
		g.goods_category AS "goods.goodsCategory",
		g.goods_code AS "goods.goodsCode",
		g.goods_name AS "goods.goodsName",
		g.goods_type AS "goods.goodsType",
		g.unit AS "goods.unit",
		g.goods_spec AS "goods.goodsSpec",
		g.approval_number AS "goods.approvalNumber",
		g.manufacturer AS "goods.manufacturer",
		o2.name AS "goods.office.name"
	</sql>

	<sql id="goodsJoins">
		LEFT JOIN sys_office o2 ON o2.id = g.office_id
	</sql>


	<select id="get" resultType="GoodsValuation">
		SELECT 
			<include refid="goodsValuationColumns"/>
		FROM goods_valuation a
		<include refid="goodsValuationJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="GoodsValuation">
		SELECT 
			<include refid="goodsValuationColumns"/>,
			<include refid="goodsColumns"/>
		FROM goods g
		left join goods_valuation a
		on g.id=a.goods_id
		<include refid="goodsValuationJoins"/>
		<!--商品关联单位机构-->
		<include refid="goodsJoins"/>

		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="goodsId != null and goodsId != ''">
				AND a.goods_id = #{goodsId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="GoodsValuation">
		SELECT 
			<include refid="goodsValuationColumns"/>
		FROM goods_valuation a
		<include refid="goodsValuationJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO goods_valuation(
			id,
			goods_id,
			third_query_price_flag,
			not_third_query_price_flag,
			one_price,
			two_price,
			three_price,
			four_price,
			five_price,
			public_price,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{goodsId},
			#{thirdQueryPriceFlag},
			#{notThirdQueryPriceFlag},
			#{onePrice},
			#{twoPrice},
			#{threePrice},
			#{fourPrice},
			#{fivePrice},
			#{publicPrice},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE goods_valuation SET 	
			goods_id = #{goodsId},
			third_query_price_flag = #{thirdQueryPriceFlag},
			not_third_query_price_flag = #{notThirdQueryPriceFlag},
			one_price = #{onePrice},
			two_price = #{twoPrice},
			three_price = #{threePrice},
			four_price = #{fourPrice},
			five_price = #{fivePrice},
			public_price = #{publicPrice},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE goods_valuation SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>